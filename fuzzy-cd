#!/usr/bin/env bash

# If not running interactively, don't do anything
# Bypass by setting FUZZYCD_TTY_FORCE
if [[ -z "$FUZZYCD_TTY_FORCE" ]]; then
  case $- in
    *i*) ;;
    *) return;;
  esac
fi

unalias cd 2> /dev/null
cd() {
  local version="0.1.0"
  local histfile=${FUZZYCD_HISTORY_FILE:-"$HOME/.fuzzy-cd-history"}
  
  is_dirname() {
    if [[ -d "$1" ]]; then
      return 0
    
    elif [[ -n "$CDPATH" ]]; then
      cdpath=("${CDPATH//:/ }")
      for path in "${cdpath[@]}"; do
        [[ -d "$path/$1" ]] && return 0
      done
    fi

    return 1
  }

  show_list_requested() {
    [[ "$1" == '-l' ]]
  }

  show_version_requested() {
    [[ "$1" == '-v' ]]      
  }
  
  show_version() {
    echo "fuzzy-cd $version"
  }

  unhandled_command() {
    [[ $# == 0 || $1 == -* ]]
  }

  run_fzf() {
    # shellcheck disable=SC2145
    fzf --query="$@" --select-1 --exit-0 --scheme=path --info=hidden --prompt="âžœ cd " --preview='ls {}' --preview-window="border-left"
  }

  dir_search() {
    run_fzf "$@" < "$histfile"
  }

  remember_me() {
    grep -qxF "$PWD" "$histfile" || echo "$PWD" >> "$histfile"
  }

  chdir() {
    builtin cd "$@" && remember_me
  }

  [[ -f "$histfile" ]] || touch "$histfile"

  if show_list_requested "$@"; then
    dir_search
  elif show_version_requested "$@"; then
    show_version
  elif unhandled_command "$@"; then
    chdir "$@"
  elif is_dirname "$1"; then
    chdir "$1"
  else    
    target=$(dir_search "$@")
    if [[ -n $target ]]; then
      chdir "$target"
    else
      chdir "$@"
    fi
  fi
}
